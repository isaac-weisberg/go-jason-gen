// Code generated by "go-jason-gen"; DO NOT EDIT.

package sample

import (
	"errors"

	gojason "github.com/isaac-weisberg/go-jason"
	values "github.com/isaac-weisberg/go-jason/values"
)

func makeAddMoneyRequestFromJson(bytes []byte) (*addMoneyRequest, error) {
	var j = errors.Join
	var e = errors.New

	rootValueAny, err := gojason.Parse(bytes)
	if err != nil {
		return nil, j(e("parsing json into an object tree failed"), err)
	}

	rootObject, err := rootValueAny.AsObject()
	if err != nil {
		return nil, j(e("interpreting root json value as an object failed"), err)
	}

	parsedObject, err := parseAddMoneyRequestFromJsonObject(rootObject)
	if err != nil {
		return nil, j(e("parsing json into the resulting value failed"), err)
	}

	return parsedObject, nil
}

func parseAddMoneyRequestFromJson(rootObject *values.JsonValueObject) (*addMoneyRequest, error) {
	var j = errors.Join
	var e = errors.New

	var stringKeyValues = rootObject.StringKeyedKeyValuesOnly()

	valueForAmountKey, exists := stringKeyValues["amount"]
	if !exists {
		return nil, j(e("value not found for key 'amount'"))
	}
	valueForMoneySpentKey, exists := stringKeyValues["moneySpent"]
	if !exists {
		return nil, j(e("value not found for key 'moneySpent'"))
	}
}
